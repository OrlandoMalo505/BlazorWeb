<div class="bg-light border m-1 col-5" @onclick="(args)=>LastSelectedUpdate(args, Product.Name)">
               <h4 class="text-secondary">Product-@Product.Id</h4>
               <input type="checkbox" @onchange="FavouriteUpdated"/> Add to Favourite <br /> <br />
               Name- @Product.Name <br/> 
               @if(ProductContent != null)
    {
        <p>@ProductContent</p>
    }
    Show Properties:
               <input type="checkbox" @bind-value="@Product.IsActive" checked="@(Product.IsActive? "checked":null)" />
                @if (Product.IsActive)
                {
                    @foreach(var props in Product.ProductProperties)
                    {
                        <p>@props.Key - @props.Value</p>
                    }
                }
                <br>
              <_EditDeleteButton IsActive="@Product.IsActive"/>
            </div>

@code {
    [Parameter]
    public Product Product { get; set; }

    [Parameter]
    public EventCallback<bool> OnFavouriteSelection { get; set; }

    [Parameter]
    public EventCallback<string> OnLastSelected{ get; set; }

    [Parameter]
    public RenderFragment ProductContent { get; set; }

    private async Task FavouriteUpdated(ChangeEventArgs e)
    {
        await OnFavouriteSelection.InvokeAsync((bool)e.Value);
    }

    private async Task LastSelectedUpdate(MouseEventArgs e, string name)
    {
        await OnLastSelected.InvokeAsync(name);
    }

}
