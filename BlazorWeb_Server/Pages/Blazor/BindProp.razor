@page "/blazor/bindProp"
<div class="row">
    <div class="col-6 border p-3">
    <h3 class="text-primary">Product Playground</h3>
    <hr />
<div>Active: <input type="checkbox" @bind-value="@Product.IsActive" checked="@(Product.IsActive? "checked":null)" /> <br /></div>
<div>Price: <input type="number" @bind-value="@Product.Price" @bind-value:event="oninput"/> <br /></div>
<div>Product Properties:
<select @bind="selectedProperty">
    @foreach(var p in Product.ProductProperties)
    {
        <option value="@p.Key">@p.Key</option>
    }
</select>
</div>
</div>

<div class="col-6 border p-3"> 
<h3 class="text-primary">Product Summary:</h3>
<hr />
Name: @Product.Name <br />
Active: @Product.IsActive <br />
Price: @Product.Price <br />
This Product is: @(Product.IsActive? "Active" :"Inactive") <br />
Property Selected: @selectedProperty <br />
@if (!string.IsNullOrWhiteSpace(selectedProperty))
{
    <p>Property Value: @Product.ProductProperties.FirstOrDefault(x => x.Key==selectedProperty).Value</p>
}
<br />
<br />
</div>

</div>

@code {
    private string selectedProperty = "";
    Product Product = new Product()
        {
            Id = 1,
            Name = "Roses",
            IsActive = true,
            Price = 11.99,
            ProductProperties = new List<ProductProp>()
            {
                new ProductProp() { Id = 1, Key = "Color", Value = "Black" },
                new ProductProp() { Id = 2, Key = "Flavor", Value = "Jasmine" },
                new ProductProp() { Id = 3, Key = "Size", Value = "20oz" }
            }
             
        };
}
